import streamlit as st
import sys
import os

# Adiciona o diret√≥rio raiz ao path
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

from operations.eyewash_operations import save_eyewash_inspection
from auth.auth_utils import can_edit, get_user_display_name
from operations.demo_page import show_demo_page
from config.page_config import set_page_config

set_page_config()

# Lista de perguntas para o checklist
CHECKLIST_QUESTIONS = {
    "Condi√ß√µes Gerais": [
        "A VAZ√ÉO DO CHUVEIRO EST√Å ADEQUADA?",
        "A PRESS√ÉO EST√Å ADEQUADA?",
        "A PINTURA ESTA √çNTEGRA?",
        "OPERA√á√ÉO DAS V√ÅLVULAS ‚Äì ACIONAMENTO POSSUI VAZAMENTO?",
        "O ACESSO EST√Å LIVRE?",
        "NIVELAMENTO POSSUI DESN√çVEL?",
        "A DRENAGEM DE √ÅGUA FUNCIONA?",
        "O CRIVO EST√Å DESOBSTRU√çDO E BEM FIXADO?",
        "O FILTRO EST√Å LIMPO?",
        "O REGULADOR DE PRESS√ÉO FUNCIONA CORRETAMENTE?",
        "O PISO POSSUI ADER√äNCIA?",
        "OS EMPREGADOS S√ÉO CAPACITADOS PARA UTILIZ√Å-LOS?",
        "O EQUIPAMENTO POSSUI CORROS√ÉO?",
        "EXISTE PINTURA DO PISO SOB/EM VOLTA DA ESTA√á√ÉO?",
        "OS ESGUICHOS POSSUEM DEFEITOS?",
        "O PISO EST√Å DANIFICADO?"
    ]
}

def show_eyewash_inspection_page():
    st.title("üöø Inspe√ß√£o de Chuveiros e Lava-Olhos de Emerg√™ncia")
    
    equipment_id = st.text_input("**Digite o ID ou a localiza√ß√£o do equipamento:**", placeholder="Ex: CLO-01 / Pr√≥ximo ao Tanque T-102")

    if not equipment_id:
        st.info("Por favor, identifique o equipamento para iniciar a inspe√ß√£o.")
        st.stop()
        
    st.markdown("---")
    
    with st.form(key=f"inspection_form_{equipment_id}", clear_on_submit=True):
        inspection_results = {}
        has_issues = False
        
        for category, questions in CHECKLIST_QUESTIONS.items():
            st.subheader(category)
            for question in questions:
                # Usando uma chave √∫nica para cada widget de r√°dio
                key = f"{equipment_id}_{question}".replace(" ", "_")
                answer = st.radio(
                    label=question,
                    options=["Conforme", "N√£o Conforme", "N/A"],
                    key=key,
                    horizontal=True
                )
                inspection_results[question] = answer
                if answer == "N√£o Conforme":
                    has_issues = True
        
        submitted = st.form_submit_button("‚úÖ Salvar Inspe√ß√£o", type="primary", use_container_width=True)

        if submitted:
            overall_status = "Reprovado com Pend√™ncias" if has_issues else "Aprovado"
            with st.spinner("Salvando inspe√ß√£o..."):
                if save_eyewash_inspection(equipment_id, overall_status, inspection_results, get_user_display_name()):
                    st.success(f"Inspe√ß√£o para '{equipment_id}' salva com sucesso como '{overall_status}'!")
                    st.balloons() if not has_issues else None
                    st.cache_data.clear()
                else:
                    st.error("Ocorreu um erro ao salvar a inspe√ß√£o.")

# --- Verifica√ß√£o de Permiss√£o ---
if can_edit():
    st.sidebar.success("‚úÖ Acesso completo")
    show_eyewash_inspection_page()
else:
    st.sidebar.error("üîí Acesso negado")
    st.info("Voc√™ n√£o tem permiss√£o para acessar esta funcionalidade.")
    show_demo_page()
