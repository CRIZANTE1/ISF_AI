name: Invitation Notifications System

on:
  schedule:
    # Executa a cada 2 horas para verificar tentativas de acesso n√£o autorizadas
    - cron: '0 */2 * * *'
  workflow_dispatch:
    # Permite execu√ß√£o manual
    inputs:
      action:
        description: 'A√ß√£o a executar'
        required: true
        default: 'send_invitations'
        type: choice
        options:
        - send_invitations
        - test_single_invitation

jobs:
  send-invitations:
    if: github.event_name == 'schedule' || github.event.inputs.action == 'send_invitations'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client jinja2
        
    - name: Send Invitation Emails
      env:
        SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
        SMTP_PORT: ${{ secrets.SMTP_PORT }}
        SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
        SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
        FROM_EMAIL: ${{ secrets.FROM_EMAIL }}
        FROM_NAME: ${{ secrets.FROM_NAME }}
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        MATRIX_SHEETS_ID: ${{ secrets.MATRIX_SHEETS_ID }}
        APP_URL: ${{ secrets.APP_URL }}
      run: |
        python .github/scripts/send_invitation_email.py

  test-single-invitation:
    if: github.event.inputs.action == 'test_single_invitation'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client jinja2
        
    - name: Test Single Invitation
      env:
        SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
        SMTP_PORT: ${{ secrets.SMTP_PORT }}
        SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
        SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
        FROM_EMAIL: ${{ secrets.FROM_EMAIL }}
        FROM_NAME: ${{ secrets.FROM_NAME }}
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        MATRIX_SHEETS_ID: ${{ secrets.MATRIX_SHEETS_ID }}
        APP_URL: ${{ secrets.APP_URL }}
      run: |
        python -c "
        import os
        import sys
        sys.path.append('.')
        
        from github.scripts.send_invitation_email import send_invitation_email, get_google_sheets_service
        
        smtp_config = {
            'server': os.environ['SMTP_SERVER'],
            'port': int(os.environ['SMTP_PORT']),
            'username': os.environ['SMTP_USERNAME'],
            'password': os.environ['SMTP_PASSWORD'],
            'from_email': os.environ['FROM_EMAIL'],
            'from_name': os.environ['FROM_NAME']
        }
        
        # Teste com um email de exemplo
        test_email = 'teste@exemplo.com'
        app_url = os.environ['APP_URL']
        
        print(f'Enviando convite de teste para: {test_email}')
        success = send_invitation_email(smtp_config, test_email, app_url)
        
        if success:
            print('‚úÖ Convite de teste enviado com sucesso!')
        else:
            print('‚ùå Falha no envio do convite de teste')
            sys.exit(1)
        "

  health-check:
    runs-on: ubuntu-latest
    needs: [send-invitations]
    if: always()
    
    steps:
    - name: Invitation System Health Check
      run: |
        echo "üìß Sistema de Convites Autom√°ticos"
        echo "‚úÖ Status: Operacional"
        echo "‚è∞ √öltima execu√ß√£o: $(date)"
        echo ""
        echo "üìä Configura√ß√£o:"
        echo "   - Frequ√™ncia: A cada 2 horas"
        echo "   - Detec√ß√£o: Tentativas n√£o autorizadas"
        echo "   - A√ß√£o: Envio autom√°tico de convite"
        echo ""
        echo "üîç Vari√°veis configuradas:"
        echo "   - SMTP: $([[ -n \"$SMTP_SERVER\" ]] && echo 'Configurado' || echo 'Faltando')"
        echo "   - Credenciais Google: $([[ -n \"$GOOGLE_CREDENTIALS\" ]] && echo 'Configurado' || echo 'Faltando')"
        echo "   - URL do App: $([[ -n \"$APP_URL\" ]] && echo 'Configurado' || echo 'Faltando')"
      env:
        SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        APP_URL: ${{ secrets.APP_URL }}
